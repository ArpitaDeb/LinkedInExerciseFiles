{"ast":null,"code":"export function promises() {\n  function waitUpToThreeSeconds(seconds) {\n    return new Promise((resolve, reject) => {\n      console.log(`I'll wait up to three seconds. You asked me to wait for ${seconds} seconds.`);\n      setTimeout(() => {\n        reject('3 seconds are up! You asked me to wait too long!');\n      }, 3000);\n      setTimeout(() => {\n        resolve(`${seconds} seconds are finished! What a pleasure!`);\n      }, seconds * 1000);\n    });\n  }\n\n  waitUpToThreeSeconds(2).then(successMessage => {\n    console.log(successMessage);\n  }).catch(errorMessage => {\n    console.log(errorMessage);\n  });\n  waitUpToThreeSeconds(4).then(successMessage => {\n    console.log(successMessage);\n  }).catch(errorMessage => {\n    console.log(errorMessage);\n  });\n}","map":{"version":3,"sources":["C:/Users/arpit/ExerciseFiles/FinalProject/src/examples/promises.js"],"names":["promises","waitUpToThreeSeconds","seconds","Promise","resolve","reject","console","log","setTimeout","then","successMessage","catch","errorMessage"],"mappings":"AAAA,OAAO,SAASA,QAAT,GAAoB;AACzB,WAASC,oBAAT,CAA8BC,OAA9B,EAAuC;AACrC,WAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEvCC,MAAAA,OAAO,CAACC,GAAR,CAAa,2DAA0DL,OAAQ,WAA/E;AAEAM,MAAAA,UAAU,CACR,MAAM;AACJH,QAAAA,MAAM,CAAC,kDAAD,CAAN;AACD,OAHO,EAIR,IAJQ,CAAV;AAOAG,MAAAA,UAAU,CACR,MAAM;AACJJ,QAAAA,OAAO,CAAE,GAAEF,OAAQ,yCAAZ,CAAP;AACD,OAHO,EAIRA,OAAO,GAAG,IAJF,CAAV;AAQD,KAnBM,CAAP;AAoBD;;AAEDD,EAAAA,oBAAoB,CAAC,CAAD,CAApB,CAAwBQ,IAAxB,CAA6BC,cAAc,IAAI;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ;AACD,GAF3B,EAG2BC,KAH3B,CAGiCC,YAAY,IAAI;AACrBN,IAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACD,GAL3B;AAOAX,EAAAA,oBAAoB,CAAC,CAAD,CAApB,CAAwBQ,IAAxB,CAA6BC,cAAc,IAAI;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ;AACD,GAF3B,EAG2BC,KAH3B,CAGiCC,YAAY,IAAI;AACrBN,IAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACD,GAL3B;AAQD","sourcesContent":["export function promises() {\n  function waitUpToThreeSeconds(seconds) {\n    return new Promise( (resolve, reject) => {\n\n      console.log(`I'll wait up to three seconds. You asked me to wait for ${seconds} seconds.`)\n\n      setTimeout(\n        () => {\n          reject('3 seconds are up! You asked me to wait too long!')\n        },\n        3000\n      )\n\n      setTimeout(\n        () => {\n          resolve(`${seconds} seconds are finished! What a pleasure!`)\n        },\n        seconds * 1000\n      )\n\n\n    })\n  }\n\n  waitUpToThreeSeconds(2).then(successMessage => {\n                              console.log(successMessage)\n                            })\n                            .catch(errorMessage => {\n                              console.log(errorMessage)\n                            })\n\n  waitUpToThreeSeconds(4).then(successMessage => {\n                              console.log(successMessage)\n                            })\n                            .catch(errorMessage => {\n                              console.log(errorMessage)\n                            })\n\n\n}\n"]},"metadata":{},"sourceType":"module"}