{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arpit\\\\ExerciseFiles\\\\FinalProject\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Markup, Editor, Container, Column, Row, RuleInput, RuleLabel, StyleInput, Button, Document } from './styled';\nimport hljs from 'highlight.js';\nimport { rando, getRandomPoem } from './utils';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editor: \"\",\n      name0: \"\",\n      begin0: \"\",\n      end0: \"\",\n      style0: \"\",\n      rules: 1\n    };\n\n    this.handleChange = event => {\n      let {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.newFields = () => {\n      this.setState(prevState => {\n        let {\n          rules\n        } = prevState;\n        let fields = ['name', 'begin', 'end', 'style'];\n        let inputValues = {};\n        fields.forEach(field => {\n          inputValues = { ...inputValues,\n            [`${field}${rules}`]: ''\n          };\n        });\n        rules++;\n        return {\n          rules,\n          ...inputValues\n        };\n      });\n    };\n\n    this.convertToMarkup = (text = \"\") => {\n      return {\n        __html: hljs.highlightAuto(text).value\n      };\n    };\n\n    this.language = newRules => {\n      return () => ({\n        contains: [...newRules]\n      });\n    };\n\n    this.registerLanguage = state => {\n      let {\n        rules\n      } = state;\n      let ruleObjects = [];\n\n      for (let i = 0; i < rules; i++) {\n        let newRule = {\n          className: state[`name${i}`],\n          begin: state[`begin${i}`],\n          end: state[`end${i}`]\n        };\n        let {\n          className,\n          begin,\n          end\n        } = newRule;\n\n        if (className.length > 1 && begin.length > 1 && end.length > 1) {\n          begin = new RegExp(begin);\n          end = new RegExp(end);\n          ruleObjects.push(newRule);\n        }\n      }\n\n      hljs.registerLanguage('language', this.language(ruleObjects));\n      hljs.configure({\n        languages: ['language']\n      });\n    };\n\n    this.prepareStyles = () => {\n      let {\n        rules\n      } = this.state;\n      let styles = [];\n\n      for (let i = 0; i < rules; i++) {\n        styles.push(`\n        .hljs-${this.state['name' + i]} {\n          ${this.state['style' + i]}\n        }\n      `);\n      }\n\n      let newStyles = \"\".concat(styles).replace(\",\", \"\");\n\n      while (newStyles.includes('random')) {\n        newStyles = newStyles.replace('random', rando.color());\n      }\n\n      return newStyles;\n    };\n\n    this.getRandomText = async () => {\n      try {\n        let poem = await getRandomPoem();\n        this.handleChange({\n          target: {\n            name: 'editor',\n            value: poem\n          }\n        });\n      } catch (error) {\n        console.log(\"getRandomPoem error\", error);\n      }\n    };\n  }\n\n  get rules() {\n    let {\n      rules\n    } = this.state;\n    let array = [];\n    let fields = ['name', 'begin', 'end'];\n\n    for (let i = 0; i < rules; i++) {\n      array.push( /*#__PURE__*/React.createElement(Row, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, fields.map((field, index) => {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(RuleLabel, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }\n        }, field), /*#__PURE__*/React.createElement(RuleInput, {\n          value: this.state[`${field}${i}`],\n          onChange: this.handleChange,\n          name: `${field}${i}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(StyleInput, {\n        value: this.state[`style${i}`],\n        onChange: this.handleChange,\n        name: `style${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    return array;\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.registerLanguage(nextState);\n  }\n\n  render() {\n    let {\n      editor\n    } = this.state;\n    let {\n      handleChange,\n      newFields,\n      rules,\n      convertToMarkup,\n      prepareStyles,\n      getRandomText\n    } = this;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, rules, /*#__PURE__*/React.createElement(Button, {\n      onClick: newFields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, \"New Rule\")), /*#__PURE__*/React.createElement(Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: getRandomText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, \"Random Text\"), /*#__PURE__*/React.createElement(Document, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      name: \"editor\",\n      value: editor,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Markup, {\n      customStyles: prepareStyles(),\n      dangerouslySetInnerHTML: convertToMarkup(editor),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/arpit/ExerciseFiles/FinalProject/src/App.js"],"names":["React","Component","Markup","Editor","Container","Column","Row","RuleInput","RuleLabel","StyleInput","Button","Document","hljs","rando","getRandomPoem","App","state","editor","name0","begin0","end0","style0","rules","handleChange","event","name","value","target","setState","newFields","prevState","fields","inputValues","forEach","field","convertToMarkup","text","__html","highlightAuto","language","newRules","contains","registerLanguage","ruleObjects","i","newRule","className","begin","end","length","RegExp","push","configure","languages","prepareStyles","styles","newStyles","concat","replace","includes","color","getRandomText","poem","error","console","log","array","map","index","componentWillUpdate","nextProps","nextState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Markup, Editor, Container, Column, Row, RuleInput, RuleLabel, StyleInput, Button, Document} from './styled'\nimport hljs from 'highlight.js'\nimport {rando, getRandomPoem} from './utils'\n\n\nclass App extends Component {\n\n\n  state = {\n    editor: \"\",\n    name0: \"\",\n    begin0: \"\",\n    end0: \"\",\n    style0: \"\",\n    rules: 1\n  }\n\n  handleChange = (event) => {\n    let {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  get rules () {\n    let {rules} = this.state\n    let array = []\n    let fields = ['name', 'begin', 'end']\n    for (let i = 0; i < rules; i++) {\n      array.push(\n        <Row\n          key={i}\n        >\n          <Column>\n            {fields.map( (field, index) => {\n              return (\n                <Column\n                  key={index}\n                >\n                  <RuleLabel>\n                    {field}\n                  </RuleLabel>\n                  <RuleInput\n                    value={this.state[`${field}${i}`]}\n                    onChange={this.handleChange}\n                    name={`${field}${i}`}\n                  />\n                </Column>\n              )\n            })}\n          </Column>\n          <StyleInput\n            value={this.state[`style${i}`]}\n            onChange={this.handleChange}\n            name={`style${i}`}\n          />\n        </Row>\n      )\n    }\n\n    return array\n  }\n\n  newFields = () => {\n    this.setState( (prevState) => {\n      let {rules} = prevState\n      let fields = ['name', 'begin', 'end', 'style']\n      let inputValues = {}\n      fields.forEach( (field) => {\n        inputValues = {\n          ...inputValues,\n          [`${field}${rules}`]: ''\n        }\n      })\n      rules++\n      return {\n        rules,\n        ...inputValues\n      }\n    })\n  }\n\n\n  convertToMarkup = (text = \"\") => {\n    return {\n      __html: hljs.highlightAuto(text).value\n    }\n  }\n\n  language = (newRules) => {\n    return () => ({\n      contains: [\n        ...newRules\n      ]\n    })\n  }\n\n  registerLanguage = (state) => {\n    let {rules} = state\n    let ruleObjects = []\n    for (let i = 0; i < rules; i++) {\n      let newRule = {\n        className: state[`name${i}`],\n        begin: state[`begin${i}`],\n        end: state[`end${i}`]\n      }\n      let {className, begin, end} = newRule\n      if (\n        className.length > 1 &&\n        begin.length > 1 &&\n        end.length > 1\n      ) {\n        begin = new RegExp(begin)\n        end = new RegExp(end)\n        ruleObjects.push(newRule)\n      }\n    }\n    hljs.registerLanguage('language', this.language(ruleObjects))\n    hljs.configure({\n      languages: ['language']\n    })\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.registerLanguage(nextState)\n  }\n\n  prepareStyles = () => {\n    let {rules} = this.state\n    let styles = []\n    for (let i = 0; i < rules; i++) {\n      styles.push(`\n        .hljs-${this.state['name' + i]} {\n          ${this.state['style' + i]}\n        }\n      `)\n    }\n\n    let newStyles = \"\".concat(styles).replace(\",\", \"\")\n\n    while (newStyles.includes('random')) {\n      newStyles = newStyles.replace('random', rando.color())\n    }\n\n    return newStyles\n  }\n\n  getRandomText = async () => {\n    try {\n      let poem = await getRandomPoem()\n      this.handleChange({\n        target: {\n          name: 'editor',\n          value: poem\n        }\n      })\n    } catch (error) {\n      console.log(\"getRandomPoem error\", error)\n    }\n  }\n\n\n  render() {\n    let {editor} = this.state\n    let {handleChange, newFields, rules, convertToMarkup, prepareStyles, getRandomText} = this\n    return (\n      <Container>\n        <Column>\n          {rules}\n          <Button\n            onClick={newFields}\n          >\n            New Rule\n          </Button>\n        </Column>\n        <Column>\n          <Button\n            onClick={getRandomText}\n          >\n            Random Text\n          </Button>\n          <Document>\n            <Editor\n              name={\"editor\"}\n              value={editor}\n              onChange={handleChange}\n            />\n            <Markup\n              customStyles={prepareStyles()}\n              dangerouslySetInnerHTML={convertToMarkup(editor)}\n            />\n          </Document>\n        </Column>\n      </Container>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}